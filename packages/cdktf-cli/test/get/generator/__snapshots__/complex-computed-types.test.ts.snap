// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate an acm certifacte resource with complex computed types 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/acm_certificate.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface AcmCertificateConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#certificate_authority_arn AcmCertificate#certificate_authority_arn}
  */
  readonly certificateAuthorityArn?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#certificate_body AcmCertificate#certificate_body}
  */
  readonly certificateBody?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#certificate_chain AcmCertificate#certificate_chain}
  */
  readonly certificateChain?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#domain_name AcmCertificate#domain_name}
  */
  readonly domainName?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#private_key AcmCertificate#private_key}
  */
  readonly privateKey?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#subject_alternative_names AcmCertificate#subject_alternative_names}
  */
  readonly subjectAlternativeNames?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#tags AcmCertificate#tags}
  */
  readonly tags?: cdktf.TerraformStringMap;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#validation_method AcmCertificate#validation_method}
  */
  readonly validationMethod?: cdktf.TerraformString;
  /**
  * options block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#options AcmCertificate#options}
  */
  readonly options?: TerraformAcmCertificateOptionsList;
}
export class AcmCertificateDomainValidationOptions extends cdktf.ComplexComputedList {

  // domain_name - computed: true, optional: false, required: false
  private _domainName: cdktf.TerraformStringAttribute;
  public get domainName() {
    return this._domainName;
  }

  // resource_record_name - computed: true, optional: false, required: false
  private _resourceRecordName: cdktf.TerraformStringAttribute;
  public get resourceRecordName() {
    return this._resourceRecordName;
  }

  // resource_record_type - computed: true, optional: false, required: false
  private _resourceRecordType: cdktf.TerraformStringAttribute;
  public get resourceRecordType() {
    return this._resourceRecordType;
  }

  // resource_record_value - computed: true, optional: false, required: false
  private _resourceRecordValue: cdktf.TerraformStringAttribute;
  public get resourceRecordValue() {
    return this._resourceRecordValue;
  }
}
export interface AcmCertificateOptions {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html#certificate_transparency_logging_preference AcmCertificate#certificate_transparency_logging_preference}
  */
  readonly certificateTransparencyLoggingPreference?: cdktf.TerraformString;
}

function acmCertificateOptionsToTerraform(struct?: AcmCertificateOptions): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    certificate_transparency_logging_preference: struct!.certificateTransparencyLoggingPreference.toTerraform(),
  }
}


/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html aws_acm_certificate}
*/
export class AcmCertificate extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/aws/r/acm_certificate.html aws_acm_certificate} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options AcmCertificateConfig = {}
  */
  public constructor(scope: Construct, id: string, config: AcmCertificateConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_acm_certificate',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this.putCertificateAuthorityArn(config.certificateAuthorityArn ?? new cdktf.TerraformStringAttribute(this, 'certificate_authority_arn', undefined));
    this.putCertificateBody(config.certificateBody ?? new cdktf.TerraformStringAttribute(this, 'certificate_body', undefined));
    this.putCertificateChain(config.certificateChain ?? new cdktf.TerraformStringAttribute(this, 'certificate_chain', undefined));
    this.putDomainName(config.domainName ?? new cdktf.TerraformStringAttribute(this, 'domain_name', undefined));
    this._domainValidationOptions = new TerraformAcmCertificateDomainValidationOptionsListAttribute(this, 'domain_validation_options', undefined)
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this.putPrivateKey(config.privateKey ?? new cdktf.TerraformStringAttribute(this, 'private_key', undefined));
    this.putSubjectAlternativeNames(config.subjectAlternativeNames ?? new cdktf.TerraformStringListAttribute(this, 'subject_alternative_names', undefined));
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this._validationEmails = new cdktf.TerraformStringListAttribute(this, 'validation_emails', undefined)
    this.putValidationMethod(config.validationMethod ?? new cdktf.TerraformStringAttribute(this, 'validation_method', undefined));
    this.putOptions(config.options ?? new TerraformAcmCertificateOptionsListAttribute(this, 'options', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // arn - computed: true, optional: false, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // certificate_authority_arn - computed: false, optional: true, required: false
  private _certificateAuthorityArn!: cdktf.TerraformStringAttribute;
  public get certificateAuthorityArn() {
    return this._certificateAuthorityArn;
  }
  public putCertificateAuthorityArn(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._certificateAuthorityArn.reset();
    }
    else {
      this._certificateAuthorityArn = cdktf.TerraformStringAttribute.create(this, 'certificate_authority_arn', value);
    }
  }

  // certificate_body - computed: false, optional: true, required: false
  private _certificateBody!: cdktf.TerraformStringAttribute;
  public get certificateBody() {
    return this._certificateBody;
  }
  public putCertificateBody(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._certificateBody.reset();
    }
    else {
      this._certificateBody = cdktf.TerraformStringAttribute.create(this, 'certificate_body', value);
    }
  }

  // certificate_chain - computed: false, optional: true, required: false
  private _certificateChain!: cdktf.TerraformStringAttribute;
  public get certificateChain() {
    return this._certificateChain;
  }
  public putCertificateChain(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._certificateChain.reset();
    }
    else {
      this._certificateChain = cdktf.TerraformStringAttribute.create(this, 'certificate_chain', value);
    }
  }

  // domain_name - computed: true, optional: true, required: false
  private _domainName!: cdktf.TerraformStringAttribute;
  public get domainName() {
    return this._domainName;
  }
  public putDomainName(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._domainName.reset();
    }
    else {
      this._domainName = cdktf.TerraformStringAttribute.create(this, 'domain_name', value);
    }
  }

  // domain_validation_options - computed: true, optional: false, required: false
  private _domainValidationOptions: TerraformAcmCertificateDomainValidationOptionsListAttribute;
  public get domainValidationOptions() {
    return this._domainValidationOptions;
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // private_key - computed: false, optional: true, required: false
  private _privateKey!: cdktf.TerraformStringAttribute;
  public get privateKey() {
    return this._privateKey;
  }
  public putPrivateKey(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._privateKey.reset();
    }
    else {
      this._privateKey = cdktf.TerraformStringAttribute.create(this, 'private_key', value);
    }
  }

  // subject_alternative_names - computed: true, optional: true, required: false
  private _subjectAlternativeNames!: cdktf.TerraformStringListAttribute;
  public get subjectAlternativeNames() {
    return this._subjectAlternativeNames;
  }
  public putSubjectAlternativeNames(value: cdktf.TerraformStringList | undefined) {
    if (value === undefined) {
      this._subjectAlternativeNames.reset();
    }
    else {
      this._subjectAlternativeNames = cdktf.TerraformStringListAttribute.create(this, 'subject_alternative_names', value);
    }
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.reset();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.create(this, 'tags', value);
    }
  }

  // validation_emails - computed: true, optional: false, required: false
  private _validationEmails: cdktf.TerraformStringListAttribute;
  public get validationEmails() {
    return this._validationEmails;
  }

  // validation_method - computed: true, optional: true, required: false
  private _validationMethod!: cdktf.TerraformStringAttribute;
  public get validationMethod() {
    return this._validationMethod;
  }
  public putValidationMethod(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._validationMethod.reset();
    }
    else {
      this._validationMethod = cdktf.TerraformStringAttribute.create(this, 'validation_method', value);
    }
  }

  // options - computed: false, optional: true, required: false
  private _options!: TerraformAcmCertificateOptionsListAttribute;
  public get options() {
    return this._options;
  }
  public putOptions(value: TerraformAcmCertificateOptionsList | undefined) {
    if (value === undefined) {
      this._options.reset();
    }
    else {
      this._options = TerraformAcmCertificateOptionsListAttribute.create(this, 'options', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      certificate_authority_arn: this._certificateAuthorityArn.toTerraform(),
      certificate_body: this._certificateBody.toTerraform(),
      certificate_chain: this._certificateChain.toTerraform(),
      domain_name: this._domainName.toTerraform(),
      private_key: this._privateKey.toTerraform(),
      subject_alternative_names: this._subjectAlternativeNames.toTerraform(),
      tags: this._tags.toTerraform(),
      validation_method: this._validationMethod.toTerraform(),
      options: this._options.toTerraform(),
    };
  }
}
"
`;

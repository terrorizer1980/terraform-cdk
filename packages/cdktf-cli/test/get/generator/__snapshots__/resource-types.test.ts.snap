// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate a cloudfront distribution resource 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface CloudfrontDistributionConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#aliases CloudfrontDistribution#aliases}
  */
  readonly aliases?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#comment CloudfrontDistribution#comment}
  */
  readonly comment?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#default_root_object CloudfrontDistribution#default_root_object}
  */
  readonly defaultRootObject?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#enabled CloudfrontDistribution#enabled}
  */
  readonly enabled: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#http_version CloudfrontDistribution#http_version}
  */
  readonly httpVersion?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#is_ipv6_enabled CloudfrontDistribution#is_ipv6_enabled}
  */
  readonly isIpv6Enabled?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#price_class CloudfrontDistribution#price_class}
  */
  readonly priceClass?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#retain_on_delete CloudfrontDistribution#retain_on_delete}
  */
  readonly retainOnDelete?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#tags CloudfrontDistribution#tags}
  */
  readonly tags?: cdktf.TerraformStringMap;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#wait_for_deployment CloudfrontDistribution#wait_for_deployment}
  */
  readonly waitForDeployment?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#web_acl_id CloudfrontDistribution#web_acl_id}
  */
  readonly webAclId?: cdktf.TerraformString;
  /**
  * cache_behavior block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cache_behavior CloudfrontDistribution#cache_behavior}
  */
  readonly cacheBehavior?: TerraformCloudfrontDistributionCacheBehaviorSet;
  /**
  * custom_error_response block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#custom_error_response CloudfrontDistribution#custom_error_response}
  */
  readonly customErrorResponse?: TerraformCloudfrontDistributionCustomErrorResponseSet;
  /**
  * default_cache_behavior block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#default_cache_behavior CloudfrontDistribution#default_cache_behavior}
  */
  readonly defaultCacheBehavior: TerraformCloudfrontDistributionDefaultCacheBehaviorList;
  /**
  * logging_config block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#logging_config CloudfrontDistribution#logging_config}
  */
  readonly loggingConfig?: TerraformCloudfrontDistributionLoggingConfigList;
  /**
  * ordered_cache_behavior block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#ordered_cache_behavior CloudfrontDistribution#ordered_cache_behavior}
  */
  readonly orderedCacheBehavior?: TerraformCloudfrontDistributionOrderedCacheBehaviorList;
  /**
  * origin block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin CloudfrontDistribution#origin}
  */
  readonly origin: TerraformCloudfrontDistributionOriginSet;
  /**
  * origin_group block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_group CloudfrontDistribution#origin_group}
  */
  readonly originGroup?: TerraformCloudfrontDistributionOriginGroupSet;
  /**
  * restrictions block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#restrictions CloudfrontDistribution#restrictions}
  */
  readonly restrictions: TerraformCloudfrontDistributionRestrictionsList;
  /**
  * viewer_certificate block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#viewer_certificate CloudfrontDistribution#viewer_certificate}
  */
  readonly viewerCertificate: TerraformCloudfrontDistributionViewerCertificateList;
}
export interface CloudfrontDistributionCacheBehaviorForwardedValuesCookies {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#forward CloudfrontDistribution#forward}
  */
  readonly forward: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#whitelisted_names CloudfrontDistribution#whitelisted_names}
  */
  readonly whitelistedNames?: cdktf.TerraformStringSet;
}

function cloudfrontDistributionCacheBehaviorForwardedValuesCookiesToTerraform(struct?: CloudfrontDistributionCacheBehaviorForwardedValuesCookies): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    forward: struct!.forward.toTerraform(),
    whitelisted_names: struct!.whitelistedNames.toTerraform(),
  }
}

export interface CloudfrontDistributionCacheBehaviorForwardedValues {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#headers CloudfrontDistribution#headers}
  */
  readonly headers?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#query_string CloudfrontDistribution#query_string}
  */
  readonly queryString: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#query_string_cache_keys CloudfrontDistribution#query_string_cache_keys}
  */
  readonly queryStringCacheKeys?: cdktf.TerraformStringList;
  /**
  * cookies block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cookies CloudfrontDistribution#cookies}
  */
  readonly cookies: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesCookiesSet;
}

function cloudfrontDistributionCacheBehaviorForwardedValuesToTerraform(struct?: CloudfrontDistributionCacheBehaviorForwardedValues): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    headers: struct!.headers.toTerraform(),
    query_string: struct!.queryString.toTerraform(),
    query_string_cache_keys: struct!.queryStringCacheKeys.toTerraform(),
    cookies: struct!.cookies.toTerraform(),
  }
}

export interface CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#event_type CloudfrontDistribution#event_type}
  */
  readonly eventType: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#include_body CloudfrontDistribution#include_body}
  */
  readonly includeBody?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#lambda_arn CloudfrontDistribution#lambda_arn}
  */
  readonly lambdaArn: cdktf.TerraformString;
}

function cloudfrontDistributionCacheBehaviorLambdaFunctionAssociationToTerraform(struct?: CloudfrontDistributionCacheBehaviorLambdaFunctionAssociation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    event_type: struct!.eventType.toTerraform(),
    include_body: struct!.includeBody.toTerraform(),
    lambda_arn: struct!.lambdaArn.toTerraform(),
  }
}

export interface CloudfrontDistributionCacheBehavior {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#allowed_methods CloudfrontDistribution#allowed_methods}
  */
  readonly allowedMethods: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cached_methods CloudfrontDistribution#cached_methods}
  */
  readonly cachedMethods: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#compress CloudfrontDistribution#compress}
  */
  readonly compress?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#default_ttl CloudfrontDistribution#default_ttl}
  */
  readonly defaultTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#field_level_encryption_id CloudfrontDistribution#field_level_encryption_id}
  */
  readonly fieldLevelEncryptionId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#max_ttl CloudfrontDistribution#max_ttl}
  */
  readonly maxTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#min_ttl CloudfrontDistribution#min_ttl}
  */
  readonly minTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#path_pattern CloudfrontDistribution#path_pattern}
  */
  readonly pathPattern: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#smooth_streaming CloudfrontDistribution#smooth_streaming}
  */
  readonly smoothStreaming?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#target_origin_id CloudfrontDistribution#target_origin_id}
  */
  readonly targetOriginId: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#trusted_signers CloudfrontDistribution#trusted_signers}
  */
  readonly trustedSigners?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#viewer_protocol_policy CloudfrontDistribution#viewer_protocol_policy}
  */
  readonly viewerProtocolPolicy: cdktf.TerraformString;
  /**
  * forwarded_values block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#forwarded_values CloudfrontDistribution#forwarded_values}
  */
  readonly forwardedValues: TerraformCloudfrontDistributionCacheBehaviorForwardedValuesSet;
  /**
  * lambda_function_association block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#lambda_function_association CloudfrontDistribution#lambda_function_association}
  */
  readonly lambdaFunctionAssociation?: TerraformCloudfrontDistributionCacheBehaviorLambdaFunctionAssociationSet;
}

function cloudfrontDistributionCacheBehaviorToTerraform(struct?: CloudfrontDistributionCacheBehavior): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_methods: struct!.allowedMethods.toTerraform(),
    cached_methods: struct!.cachedMethods.toTerraform(),
    compress: struct!.compress.toTerraform(),
    default_ttl: struct!.defaultTtl.toTerraform(),
    field_level_encryption_id: struct!.fieldLevelEncryptionId.toTerraform(),
    max_ttl: struct!.maxTtl.toTerraform(),
    min_ttl: struct!.minTtl.toTerraform(),
    path_pattern: struct!.pathPattern.toTerraform(),
    smooth_streaming: struct!.smoothStreaming.toTerraform(),
    target_origin_id: struct!.targetOriginId.toTerraform(),
    trusted_signers: struct!.trustedSigners.toTerraform(),
    viewer_protocol_policy: struct!.viewerProtocolPolicy.toTerraform(),
    forwarded_values: struct!.forwardedValues.toTerraform(),
    lambda_function_association: struct!.lambdaFunctionAssociation.toTerraform(),
  }
}

export interface CloudfrontDistributionCustomErrorResponse {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#error_caching_min_ttl CloudfrontDistribution#error_caching_min_ttl}
  */
  readonly errorCachingMinTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#error_code CloudfrontDistribution#error_code}
  */
  readonly errorCode: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#response_code CloudfrontDistribution#response_code}
  */
  readonly responseCode?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#response_page_path CloudfrontDistribution#response_page_path}
  */
  readonly responsePagePath?: cdktf.TerraformString;
}

function cloudfrontDistributionCustomErrorResponseToTerraform(struct?: CloudfrontDistributionCustomErrorResponse): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    error_caching_min_ttl: struct!.errorCachingMinTtl.toTerraform(),
    error_code: struct!.errorCode.toTerraform(),
    response_code: struct!.responseCode.toTerraform(),
    response_page_path: struct!.responsePagePath.toTerraform(),
  }
}

export interface CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#forward CloudfrontDistribution#forward}
  */
  readonly forward: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#whitelisted_names CloudfrontDistribution#whitelisted_names}
  */
  readonly whitelistedNames?: cdktf.TerraformStringSet;
}

function cloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesToTerraform(struct?: CloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookies): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    forward: struct!.forward.toTerraform(),
    whitelisted_names: struct!.whitelistedNames.toTerraform(),
  }
}

export interface CloudfrontDistributionDefaultCacheBehaviorForwardedValues {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#headers CloudfrontDistribution#headers}
  */
  readonly headers?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#query_string CloudfrontDistribution#query_string}
  */
  readonly queryString: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#query_string_cache_keys CloudfrontDistribution#query_string_cache_keys}
  */
  readonly queryStringCacheKeys?: cdktf.TerraformStringList;
  /**
  * cookies block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cookies CloudfrontDistribution#cookies}
  */
  readonly cookies: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesCookiesList;
}

function cloudfrontDistributionDefaultCacheBehaviorForwardedValuesToTerraform(struct?: CloudfrontDistributionDefaultCacheBehaviorForwardedValues): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    headers: struct!.headers.toTerraform(),
    query_string: struct!.queryString.toTerraform(),
    query_string_cache_keys: struct!.queryStringCacheKeys.toTerraform(),
    cookies: struct!.cookies.toTerraform(),
  }
}

export interface CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#event_type CloudfrontDistribution#event_type}
  */
  readonly eventType: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#include_body CloudfrontDistribution#include_body}
  */
  readonly includeBody?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#lambda_arn CloudfrontDistribution#lambda_arn}
  */
  readonly lambdaArn: cdktf.TerraformString;
}

function cloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationToTerraform(struct?: CloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    event_type: struct!.eventType.toTerraform(),
    include_body: struct!.includeBody.toTerraform(),
    lambda_arn: struct!.lambdaArn.toTerraform(),
  }
}

export interface CloudfrontDistributionDefaultCacheBehavior {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#allowed_methods CloudfrontDistribution#allowed_methods}
  */
  readonly allowedMethods: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cached_methods CloudfrontDistribution#cached_methods}
  */
  readonly cachedMethods: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#compress CloudfrontDistribution#compress}
  */
  readonly compress?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#default_ttl CloudfrontDistribution#default_ttl}
  */
  readonly defaultTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#field_level_encryption_id CloudfrontDistribution#field_level_encryption_id}
  */
  readonly fieldLevelEncryptionId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#max_ttl CloudfrontDistribution#max_ttl}
  */
  readonly maxTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#min_ttl CloudfrontDistribution#min_ttl}
  */
  readonly minTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#smooth_streaming CloudfrontDistribution#smooth_streaming}
  */
  readonly smoothStreaming?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#target_origin_id CloudfrontDistribution#target_origin_id}
  */
  readonly targetOriginId: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#trusted_signers CloudfrontDistribution#trusted_signers}
  */
  readonly trustedSigners?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#viewer_protocol_policy CloudfrontDistribution#viewer_protocol_policy}
  */
  readonly viewerProtocolPolicy: cdktf.TerraformString;
  /**
  * forwarded_values block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#forwarded_values CloudfrontDistribution#forwarded_values}
  */
  readonly forwardedValues: TerraformCloudfrontDistributionDefaultCacheBehaviorForwardedValuesList;
  /**
  * lambda_function_association block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#lambda_function_association CloudfrontDistribution#lambda_function_association}
  */
  readonly lambdaFunctionAssociation?: TerraformCloudfrontDistributionDefaultCacheBehaviorLambdaFunctionAssociationSet;
}

function cloudfrontDistributionDefaultCacheBehaviorToTerraform(struct?: CloudfrontDistributionDefaultCacheBehavior): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_methods: struct!.allowedMethods.toTerraform(),
    cached_methods: struct!.cachedMethods.toTerraform(),
    compress: struct!.compress.toTerraform(),
    default_ttl: struct!.defaultTtl.toTerraform(),
    field_level_encryption_id: struct!.fieldLevelEncryptionId.toTerraform(),
    max_ttl: struct!.maxTtl.toTerraform(),
    min_ttl: struct!.minTtl.toTerraform(),
    smooth_streaming: struct!.smoothStreaming.toTerraform(),
    target_origin_id: struct!.targetOriginId.toTerraform(),
    trusted_signers: struct!.trustedSigners.toTerraform(),
    viewer_protocol_policy: struct!.viewerProtocolPolicy.toTerraform(),
    forwarded_values: struct!.forwardedValues.toTerraform(),
    lambda_function_association: struct!.lambdaFunctionAssociation.toTerraform(),
  }
}

export interface CloudfrontDistributionLoggingConfig {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#bucket CloudfrontDistribution#bucket}
  */
  readonly bucket: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#include_cookies CloudfrontDistribution#include_cookies}
  */
  readonly includeCookies?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#prefix CloudfrontDistribution#prefix}
  */
  readonly prefix?: cdktf.TerraformString;
}

function cloudfrontDistributionLoggingConfigToTerraform(struct?: CloudfrontDistributionLoggingConfig): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    bucket: struct!.bucket.toTerraform(),
    include_cookies: struct!.includeCookies.toTerraform(),
    prefix: struct!.prefix.toTerraform(),
  }
}

export interface CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#forward CloudfrontDistribution#forward}
  */
  readonly forward: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#whitelisted_names CloudfrontDistribution#whitelisted_names}
  */
  readonly whitelistedNames?: cdktf.TerraformStringSet;
}

function cloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesToTerraform(struct?: CloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookies): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    forward: struct!.forward.toTerraform(),
    whitelisted_names: struct!.whitelistedNames.toTerraform(),
  }
}

export interface CloudfrontDistributionOrderedCacheBehaviorForwardedValues {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#headers CloudfrontDistribution#headers}
  */
  readonly headers?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#query_string CloudfrontDistribution#query_string}
  */
  readonly queryString: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#query_string_cache_keys CloudfrontDistribution#query_string_cache_keys}
  */
  readonly queryStringCacheKeys?: cdktf.TerraformStringList;
  /**
  * cookies block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cookies CloudfrontDistribution#cookies}
  */
  readonly cookies: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesCookiesList;
}

function cloudfrontDistributionOrderedCacheBehaviorForwardedValuesToTerraform(struct?: CloudfrontDistributionOrderedCacheBehaviorForwardedValues): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    headers: struct!.headers.toTerraform(),
    query_string: struct!.queryString.toTerraform(),
    query_string_cache_keys: struct!.queryStringCacheKeys.toTerraform(),
    cookies: struct!.cookies.toTerraform(),
  }
}

export interface CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#event_type CloudfrontDistribution#event_type}
  */
  readonly eventType: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#include_body CloudfrontDistribution#include_body}
  */
  readonly includeBody?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#lambda_arn CloudfrontDistribution#lambda_arn}
  */
  readonly lambdaArn: cdktf.TerraformString;
}

function cloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationToTerraform(struct?: CloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    event_type: struct!.eventType.toTerraform(),
    include_body: struct!.includeBody.toTerraform(),
    lambda_arn: struct!.lambdaArn.toTerraform(),
  }
}

export interface CloudfrontDistributionOrderedCacheBehavior {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#allowed_methods CloudfrontDistribution#allowed_methods}
  */
  readonly allowedMethods: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cached_methods CloudfrontDistribution#cached_methods}
  */
  readonly cachedMethods: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#compress CloudfrontDistribution#compress}
  */
  readonly compress?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#default_ttl CloudfrontDistribution#default_ttl}
  */
  readonly defaultTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#field_level_encryption_id CloudfrontDistribution#field_level_encryption_id}
  */
  readonly fieldLevelEncryptionId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#max_ttl CloudfrontDistribution#max_ttl}
  */
  readonly maxTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#min_ttl CloudfrontDistribution#min_ttl}
  */
  readonly minTtl?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#path_pattern CloudfrontDistribution#path_pattern}
  */
  readonly pathPattern: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#smooth_streaming CloudfrontDistribution#smooth_streaming}
  */
  readonly smoothStreaming?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#target_origin_id CloudfrontDistribution#target_origin_id}
  */
  readonly targetOriginId: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#trusted_signers CloudfrontDistribution#trusted_signers}
  */
  readonly trustedSigners?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#viewer_protocol_policy CloudfrontDistribution#viewer_protocol_policy}
  */
  readonly viewerProtocolPolicy: cdktf.TerraformString;
  /**
  * forwarded_values block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#forwarded_values CloudfrontDistribution#forwarded_values}
  */
  readonly forwardedValues: TerraformCloudfrontDistributionOrderedCacheBehaviorForwardedValuesList;
  /**
  * lambda_function_association block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#lambda_function_association CloudfrontDistribution#lambda_function_association}
  */
  readonly lambdaFunctionAssociation?: TerraformCloudfrontDistributionOrderedCacheBehaviorLambdaFunctionAssociationSet;
}

function cloudfrontDistributionOrderedCacheBehaviorToTerraform(struct?: CloudfrontDistributionOrderedCacheBehavior): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_methods: struct!.allowedMethods.toTerraform(),
    cached_methods: struct!.cachedMethods.toTerraform(),
    compress: struct!.compress.toTerraform(),
    default_ttl: struct!.defaultTtl.toTerraform(),
    field_level_encryption_id: struct!.fieldLevelEncryptionId.toTerraform(),
    max_ttl: struct!.maxTtl.toTerraform(),
    min_ttl: struct!.minTtl.toTerraform(),
    path_pattern: struct!.pathPattern.toTerraform(),
    smooth_streaming: struct!.smoothStreaming.toTerraform(),
    target_origin_id: struct!.targetOriginId.toTerraform(),
    trusted_signers: struct!.trustedSigners.toTerraform(),
    viewer_protocol_policy: struct!.viewerProtocolPolicy.toTerraform(),
    forwarded_values: struct!.forwardedValues.toTerraform(),
    lambda_function_association: struct!.lambdaFunctionAssociation.toTerraform(),
  }
}

export interface CloudfrontDistributionOriginCustomHeader {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#name CloudfrontDistribution#name}
  */
  readonly name: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#value CloudfrontDistribution#value}
  */
  readonly value: cdktf.TerraformString;
}

function cloudfrontDistributionOriginCustomHeaderToTerraform(struct?: CloudfrontDistributionOriginCustomHeader): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    name: struct!.name.toTerraform(),
    value: struct!.value.toTerraform(),
  }
}

export interface CloudfrontDistributionOriginCustomOriginConfig {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#http_port CloudfrontDistribution#http_port}
  */
  readonly httpPort: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#https_port CloudfrontDistribution#https_port}
  */
  readonly httpsPort: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_keepalive_timeout CloudfrontDistribution#origin_keepalive_timeout}
  */
  readonly originKeepaliveTimeout?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_protocol_policy CloudfrontDistribution#origin_protocol_policy}
  */
  readonly originProtocolPolicy: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_read_timeout CloudfrontDistribution#origin_read_timeout}
  */
  readonly originReadTimeout?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_ssl_protocols CloudfrontDistribution#origin_ssl_protocols}
  */
  readonly originSslProtocols: cdktf.TerraformStringSet;
}

function cloudfrontDistributionOriginCustomOriginConfigToTerraform(struct?: CloudfrontDistributionOriginCustomOriginConfig): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    http_port: struct!.httpPort.toTerraform(),
    https_port: struct!.httpsPort.toTerraform(),
    origin_keepalive_timeout: struct!.originKeepaliveTimeout.toTerraform(),
    origin_protocol_policy: struct!.originProtocolPolicy.toTerraform(),
    origin_read_timeout: struct!.originReadTimeout.toTerraform(),
    origin_ssl_protocols: struct!.originSslProtocols.toTerraform(),
  }
}

export interface CloudfrontDistributionOriginS3OriginConfig {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_access_identity CloudfrontDistribution#origin_access_identity}
  */
  readonly originAccessIdentity: cdktf.TerraformString;
}

function cloudfrontDistributionOriginS3OriginConfigToTerraform(struct?: CloudfrontDistributionOriginS3OriginConfig): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    origin_access_identity: struct!.originAccessIdentity.toTerraform(),
  }
}

export interface CloudfrontDistributionOrigin {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#domain_name CloudfrontDistribution#domain_name}
  */
  readonly domainName: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_id CloudfrontDistribution#origin_id}
  */
  readonly originId: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_path CloudfrontDistribution#origin_path}
  */
  readonly originPath?: cdktf.TerraformString;
  /**
  * custom_header block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#custom_header CloudfrontDistribution#custom_header}
  */
  readonly customHeader?: TerraformCloudfrontDistributionOriginCustomHeaderSet;
  /**
  * custom_origin_config block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#custom_origin_config CloudfrontDistribution#custom_origin_config}
  */
  readonly customOriginConfig?: TerraformCloudfrontDistributionOriginCustomOriginConfigList;
  /**
  * s3_origin_config block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#s3_origin_config CloudfrontDistribution#s3_origin_config}
  */
  readonly s3OriginConfig?: TerraformCloudfrontDistributionOriginS3OriginConfigList;
}

function cloudfrontDistributionOriginToTerraform(struct?: CloudfrontDistributionOrigin): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    domain_name: struct!.domainName.toTerraform(),
    origin_id: struct!.originId.toTerraform(),
    origin_path: struct!.originPath.toTerraform(),
    custom_header: struct!.customHeader.toTerraform(),
    custom_origin_config: struct!.customOriginConfig.toTerraform(),
    s3_origin_config: struct!.s3OriginConfig.toTerraform(),
  }
}

export interface CloudfrontDistributionOriginGroupFailoverCriteria {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#status_codes CloudfrontDistribution#status_codes}
  */
  readonly statusCodes: cdktf.TerraformNumberSet;
}

function cloudfrontDistributionOriginGroupFailoverCriteriaToTerraform(struct?: CloudfrontDistributionOriginGroupFailoverCriteria): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    status_codes: struct!.statusCodes.toTerraform(),
  }
}

export interface CloudfrontDistributionOriginGroupMember {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_id CloudfrontDistribution#origin_id}
  */
  readonly originId: cdktf.TerraformString;
}

function cloudfrontDistributionOriginGroupMemberToTerraform(struct?: CloudfrontDistributionOriginGroupMember): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    origin_id: struct!.originId.toTerraform(),
  }
}

export interface CloudfrontDistributionOriginGroup {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#origin_id CloudfrontDistribution#origin_id}
  */
  readonly originId: cdktf.TerraformString;
  /**
  * failover_criteria block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#failover_criteria CloudfrontDistribution#failover_criteria}
  */
  readonly failoverCriteria: TerraformCloudfrontDistributionOriginGroupFailoverCriteriaList;
  /**
  * member block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#member CloudfrontDistribution#member}
  */
  readonly member: TerraformCloudfrontDistributionOriginGroupMemberList;
}

function cloudfrontDistributionOriginGroupToTerraform(struct?: CloudfrontDistributionOriginGroup): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    origin_id: struct!.originId.toTerraform(),
    failover_criteria: struct!.failoverCriteria.toTerraform(),
    member: struct!.member.toTerraform(),
  }
}

export interface CloudfrontDistributionRestrictionsGeoRestriction {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#locations CloudfrontDistribution#locations}
  */
  readonly locations?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#restriction_type CloudfrontDistribution#restriction_type}
  */
  readonly restrictionType: cdktf.TerraformString;
}

function cloudfrontDistributionRestrictionsGeoRestrictionToTerraform(struct?: CloudfrontDistributionRestrictionsGeoRestriction): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    locations: struct!.locations.toTerraform(),
    restriction_type: struct!.restrictionType.toTerraform(),
  }
}

export interface CloudfrontDistributionRestrictions {
  /**
  * geo_restriction block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#geo_restriction CloudfrontDistribution#geo_restriction}
  */
  readonly geoRestriction: TerraformCloudfrontDistributionRestrictionsGeoRestrictionList;
}

function cloudfrontDistributionRestrictionsToTerraform(struct?: CloudfrontDistributionRestrictions): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    geo_restriction: struct!.geoRestriction.toTerraform(),
  }
}

export interface CloudfrontDistributionViewerCertificate {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#acm_certificate_arn CloudfrontDistribution#acm_certificate_arn}
  */
  readonly acmCertificateArn?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#cloudfront_default_certificate CloudfrontDistribution#cloudfront_default_certificate}
  */
  readonly cloudfrontDefaultCertificate?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#iam_certificate_id CloudfrontDistribution#iam_certificate_id}
  */
  readonly iamCertificateId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#minimum_protocol_version CloudfrontDistribution#minimum_protocol_version}
  */
  readonly minimumProtocolVersion?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html#ssl_support_method CloudfrontDistribution#ssl_support_method}
  */
  readonly sslSupportMethod?: cdktf.TerraformString;
}

function cloudfrontDistributionViewerCertificateToTerraform(struct?: CloudfrontDistributionViewerCertificate): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    acm_certificate_arn: struct!.acmCertificateArn.toTerraform(),
    cloudfront_default_certificate: struct!.cloudfrontDefaultCertificate.toTerraform(),
    iam_certificate_id: struct!.iamCertificateId.toTerraform(),
    minimum_protocol_version: struct!.minimumProtocolVersion.toTerraform(),
    ssl_support_method: struct!.sslSupportMethod.toTerraform(),
  }
}


/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html aws_cloudfront_distribution}
*/
export class CloudfrontDistribution extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html aws_cloudfront_distribution} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options CloudfrontDistributionConfig
  */
  public constructor(scope: Construct, id: string, config: CloudfrontDistributionConfig) {
    super(scope, id, {
      terraformResourceType: 'aws_cloudfront_distribution',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._activeTrustedSigners = new cdktf.TerraformStringMapAttribute(this, 'active_trusted_signers', undefined)
    this.putAliases(config.aliases ?? new cdktf.TerraformStringSetAttribute(this, 'aliases', undefined));
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this._callerReference = new cdktf.TerraformStringAttribute(this, 'caller_reference', undefined)
    this.putComment(config.comment ?? new cdktf.TerraformStringAttribute(this, 'comment', undefined));
    this.putDefaultRootObject(config.defaultRootObject ?? new cdktf.TerraformStringAttribute(this, 'default_root_object', undefined));
    this._domainName = new cdktf.TerraformStringAttribute(this, 'domain_name', undefined)
    this.putEnabled(config.enabled);
    this._etag = new cdktf.TerraformStringAttribute(this, 'etag', undefined)
    this._hostedZoneId = new cdktf.TerraformStringAttribute(this, 'hosted_zone_id', undefined)
    this.putHttpVersion(config.httpVersion ?? new cdktf.TerraformStringAttribute(this, 'http_version', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this._inProgressValidationBatches = new cdktf.TerraformNumberAttribute(this, 'in_progress_validation_batches', undefined)
    this.putIsIpv6Enabled(config.isIpv6Enabled ?? new cdktf.TerraformBooleanAttribute(this, 'is_ipv6_enabled', undefined));
    this._lastModifiedTime = new cdktf.TerraformStringAttribute(this, 'last_modified_time', undefined)
    this.putPriceClass(config.priceClass ?? new cdktf.TerraformStringAttribute(this, 'price_class', undefined));
    this.putRetainOnDelete(config.retainOnDelete ?? new cdktf.TerraformBooleanAttribute(this, 'retain_on_delete', undefined));
    this._status = new cdktf.TerraformStringAttribute(this, 'status', undefined)
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this.putWaitForDeployment(config.waitForDeployment ?? new cdktf.TerraformBooleanAttribute(this, 'wait_for_deployment', undefined));
    this.putWebAclId(config.webAclId ?? new cdktf.TerraformStringAttribute(this, 'web_acl_id', undefined));
    this.putCacheBehavior(config.cacheBehavior ?? new TerraformCloudfrontDistributionCacheBehaviorSetAttribute(this, 'cache_behavior', undefined));
    this.putCustomErrorResponse(config.customErrorResponse ?? new TerraformCloudfrontDistributionCustomErrorResponseSetAttribute(this, 'custom_error_response', undefined));
    this.putDefaultCacheBehavior(config.defaultCacheBehavior);
    this.putLoggingConfig(config.loggingConfig ?? new TerraformCloudfrontDistributionLoggingConfigListAttribute(this, 'logging_config', undefined));
    this.putOrderedCacheBehavior(config.orderedCacheBehavior ?? new TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute(this, 'ordered_cache_behavior', undefined));
    this.putOrigin(config.origin);
    this.putOriginGroup(config.originGroup ?? new TerraformCloudfrontDistributionOriginGroupSetAttribute(this, 'origin_group', undefined));
    this.putRestrictions(config.restrictions);
    this.putViewerCertificate(config.viewerCertificate);
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // active_trusted_signers - computed: true, optional: false, required: false
  private _activeTrustedSigners: cdktf.TerraformStringMapAttribute;
  public get activeTrustedSigners() {
    return this._activeTrustedSigners;
  }

  // aliases - computed: false, optional: true, required: false
  private _aliases!: cdktf.TerraformStringSetAttribute;
  public get aliases() {
    return this._aliases;
  }
  public putAliases(value: cdktf.TerraformStringSet | undefined) {
    if (value === undefined) {
      this._aliases.reset();
    }
    else {
      this._aliases = cdktf.TerraformStringSetAttribute.create(this, 'aliases', value);
    }
  }

  // arn - computed: true, optional: false, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // caller_reference - computed: true, optional: false, required: false
  private _callerReference: cdktf.TerraformStringAttribute;
  public get callerReference() {
    return this._callerReference;
  }

  // comment - computed: false, optional: true, required: false
  private _comment!: cdktf.TerraformStringAttribute;
  public get comment() {
    return this._comment;
  }
  public putComment(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._comment.reset();
    }
    else {
      this._comment = cdktf.TerraformStringAttribute.create(this, 'comment', value);
    }
  }

  // default_root_object - computed: false, optional: true, required: false
  private _defaultRootObject!: cdktf.TerraformStringAttribute;
  public get defaultRootObject() {
    return this._defaultRootObject;
  }
  public putDefaultRootObject(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._defaultRootObject.reset();
    }
    else {
      this._defaultRootObject = cdktf.TerraformStringAttribute.create(this, 'default_root_object', value);
    }
  }

  // domain_name - computed: true, optional: false, required: false
  private _domainName: cdktf.TerraformStringAttribute;
  public get domainName() {
    return this._domainName;
  }

  // enabled - computed: false, optional: false, required: true
  private _enabled!: cdktf.TerraformBooleanAttribute;
  public get enabled() {
    return this._enabled;
  }
  public putEnabled(value: cdktf.TerraformBoolean) {
    this._enabled = cdktf.TerraformBooleanAttribute.create(this, 'enabled', value);
  }

  // etag - computed: true, optional: false, required: false
  private _etag: cdktf.TerraformStringAttribute;
  public get etag() {
    return this._etag;
  }

  // hosted_zone_id - computed: true, optional: false, required: false
  private _hostedZoneId: cdktf.TerraformStringAttribute;
  public get hostedZoneId() {
    return this._hostedZoneId;
  }

  // http_version - computed: false, optional: true, required: false
  private _httpVersion!: cdktf.TerraformStringAttribute;
  public get httpVersion() {
    return this._httpVersion;
  }
  public putHttpVersion(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._httpVersion.reset();
    }
    else {
      this._httpVersion = cdktf.TerraformStringAttribute.create(this, 'http_version', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // in_progress_validation_batches - computed: true, optional: false, required: false
  private _inProgressValidationBatches: cdktf.TerraformNumberAttribute;
  public get inProgressValidationBatches() {
    return this._inProgressValidationBatches;
  }

  // is_ipv6_enabled - computed: false, optional: true, required: false
  private _isIpv6Enabled!: cdktf.TerraformBooleanAttribute;
  public get isIpv6Enabled() {
    return this._isIpv6Enabled;
  }
  public putIsIpv6Enabled(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._isIpv6Enabled.reset();
    }
    else {
      this._isIpv6Enabled = cdktf.TerraformBooleanAttribute.create(this, 'is_ipv6_enabled', value);
    }
  }

  // last_modified_time - computed: true, optional: false, required: false
  private _lastModifiedTime: cdktf.TerraformStringAttribute;
  public get lastModifiedTime() {
    return this._lastModifiedTime;
  }

  // price_class - computed: false, optional: true, required: false
  private _priceClass!: cdktf.TerraformStringAttribute;
  public get priceClass() {
    return this._priceClass;
  }
  public putPriceClass(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._priceClass.reset();
    }
    else {
      this._priceClass = cdktf.TerraformStringAttribute.create(this, 'price_class', value);
    }
  }

  // retain_on_delete - computed: false, optional: true, required: false
  private _retainOnDelete!: cdktf.TerraformBooleanAttribute;
  public get retainOnDelete() {
    return this._retainOnDelete;
  }
  public putRetainOnDelete(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._retainOnDelete.reset();
    }
    else {
      this._retainOnDelete = cdktf.TerraformBooleanAttribute.create(this, 'retain_on_delete', value);
    }
  }

  // status - computed: true, optional: false, required: false
  private _status: cdktf.TerraformStringAttribute;
  public get status() {
    return this._status;
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.reset();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.create(this, 'tags', value);
    }
  }

  // wait_for_deployment - computed: false, optional: true, required: false
  private _waitForDeployment!: cdktf.TerraformBooleanAttribute;
  public get waitForDeployment() {
    return this._waitForDeployment;
  }
  public putWaitForDeployment(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._waitForDeployment.reset();
    }
    else {
      this._waitForDeployment = cdktf.TerraformBooleanAttribute.create(this, 'wait_for_deployment', value);
    }
  }

  // web_acl_id - computed: false, optional: true, required: false
  private _webAclId!: cdktf.TerraformStringAttribute;
  public get webAclId() {
    return this._webAclId;
  }
  public putWebAclId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._webAclId.reset();
    }
    else {
      this._webAclId = cdktf.TerraformStringAttribute.create(this, 'web_acl_id', value);
    }
  }

  // cache_behavior - computed: false, optional: true, required: false
  private _cacheBehavior!: TerraformCloudfrontDistributionCacheBehaviorSetAttribute;
  public get cacheBehavior() {
    return this._cacheBehavior;
  }
  public putCacheBehavior(value: TerraformCloudfrontDistributionCacheBehaviorSet | undefined) {
    if (value === undefined) {
      this._cacheBehavior.reset();
    }
    else {
      this._cacheBehavior = TerraformCloudfrontDistributionCacheBehaviorSetAttribute.create(this, 'cache_behavior', value);
    }
  }

  // custom_error_response - computed: false, optional: true, required: false
  private _customErrorResponse!: TerraformCloudfrontDistributionCustomErrorResponseSetAttribute;
  public get customErrorResponse() {
    return this._customErrorResponse;
  }
  public putCustomErrorResponse(value: TerraformCloudfrontDistributionCustomErrorResponseSet | undefined) {
    if (value === undefined) {
      this._customErrorResponse.reset();
    }
    else {
      this._customErrorResponse = TerraformCloudfrontDistributionCustomErrorResponseSetAttribute.create(this, 'custom_error_response', value);
    }
  }

  // default_cache_behavior - computed: false, optional: false, required: true
  private _defaultCacheBehavior!: TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute;
  public get defaultCacheBehavior() {
    return this._defaultCacheBehavior;
  }
  public putDefaultCacheBehavior(value: TerraformCloudfrontDistributionDefaultCacheBehaviorList) {
    this._defaultCacheBehavior = TerraformCloudfrontDistributionDefaultCacheBehaviorListAttribute.create(this, 'default_cache_behavior', value);
  }

  // logging_config - computed: false, optional: true, required: false
  private _loggingConfig!: TerraformCloudfrontDistributionLoggingConfigListAttribute;
  public get loggingConfig() {
    return this._loggingConfig;
  }
  public putLoggingConfig(value: TerraformCloudfrontDistributionLoggingConfigList | undefined) {
    if (value === undefined) {
      this._loggingConfig.reset();
    }
    else {
      this._loggingConfig = TerraformCloudfrontDistributionLoggingConfigListAttribute.create(this, 'logging_config', value);
    }
  }

  // ordered_cache_behavior - computed: false, optional: true, required: false
  private _orderedCacheBehavior!: TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute;
  public get orderedCacheBehavior() {
    return this._orderedCacheBehavior;
  }
  public putOrderedCacheBehavior(value: TerraformCloudfrontDistributionOrderedCacheBehaviorList | undefined) {
    if (value === undefined) {
      this._orderedCacheBehavior.reset();
    }
    else {
      this._orderedCacheBehavior = TerraformCloudfrontDistributionOrderedCacheBehaviorListAttribute.create(this, 'ordered_cache_behavior', value);
    }
  }

  // origin - computed: false, optional: false, required: true
  private _origin!: TerraformCloudfrontDistributionOriginSetAttribute;
  public get origin() {
    return this._origin;
  }
  public putOrigin(value: TerraformCloudfrontDistributionOriginSet) {
    this._origin = TerraformCloudfrontDistributionOriginSetAttribute.create(this, 'origin', value);
  }

  // origin_group - computed: false, optional: true, required: false
  private _originGroup!: TerraformCloudfrontDistributionOriginGroupSetAttribute;
  public get originGroup() {
    return this._originGroup;
  }
  public putOriginGroup(value: TerraformCloudfrontDistributionOriginGroupSet | undefined) {
    if (value === undefined) {
      this._originGroup.reset();
    }
    else {
      this._originGroup = TerraformCloudfrontDistributionOriginGroupSetAttribute.create(this, 'origin_group', value);
    }
  }

  // restrictions - computed: false, optional: false, required: true
  private _restrictions!: TerraformCloudfrontDistributionRestrictionsListAttribute;
  public get restrictions() {
    return this._restrictions;
  }
  public putRestrictions(value: TerraformCloudfrontDistributionRestrictionsList) {
    this._restrictions = TerraformCloudfrontDistributionRestrictionsListAttribute.create(this, 'restrictions', value);
  }

  // viewer_certificate - computed: false, optional: false, required: true
  private _viewerCertificate!: TerraformCloudfrontDistributionViewerCertificateListAttribute;
  public get viewerCertificate() {
    return this._viewerCertificate;
  }
  public putViewerCertificate(value: TerraformCloudfrontDistributionViewerCertificateList) {
    this._viewerCertificate = TerraformCloudfrontDistributionViewerCertificateListAttribute.create(this, 'viewer_certificate', value);
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      aliases: this._aliases.toTerraform(),
      comment: this._comment.toTerraform(),
      default_root_object: this._defaultRootObject.toTerraform(),
      enabled: this._enabled.toTerraform(),
      http_version: this._httpVersion.toTerraform(),
      is_ipv6_enabled: this._isIpv6Enabled.toTerraform(),
      price_class: this._priceClass.toTerraform(),
      retain_on_delete: this._retainOnDelete.toTerraform(),
      tags: this._tags.toTerraform(),
      wait_for_deployment: this._waitForDeployment.toTerraform(),
      web_acl_id: this._webAclId.toTerraform(),
      cache_behavior: this._cacheBehavior.toTerraform(),
      custom_error_response: this._customErrorResponse.toTerraform(),
      default_cache_behavior: this._defaultCacheBehavior.toTerraform(),
      logging_config: this._loggingConfig.toTerraform(),
      ordered_cache_behavior: this._orderedCacheBehavior.toTerraform(),
      origin: this._origin.toTerraform(),
      origin_group: this._originGroup.toTerraform(),
      restrictions: this._restrictions.toTerraform(),
      viewer_certificate: this._viewerCertificate.toTerraform(),
    };
  }
}
"
`;

exports[`generate a fms admin account with an empty options interface 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/fms_admin_account.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface FmsAdminAccountConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/fms_admin_account.html#account_id FmsAdminAccount#account_id}
  */
  readonly accountId?: cdktf.TerraformString;
}

/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/fms_admin_account.html aws_fms_admin_account}
*/
export class FmsAdminAccount extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/aws/r/fms_admin_account.html aws_fms_admin_account} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options FmsAdminAccountConfig = {}
  */
  public constructor(scope: Construct, id: string, config: FmsAdminAccountConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_fms_admin_account',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putAccountId(config.accountId ?? new cdktf.TerraformStringAttribute(this, 'account_id', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // account_id - computed: true, optional: true, required: false
  private _accountId!: cdktf.TerraformStringAttribute;
  public get accountId() {
    return this._accountId;
  }
  public putAccountId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._accountId.reset();
    }
    else {
      this._accountId = cdktf.TerraformStringAttribute.create(this, 'account_id', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      account_id: this._accountId.toTerraform(),
    };
  }
}
"
`;

exports[`generate a s3 bucket resource 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/s3_bucket.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface S3BucketConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#acceleration_status S3Bucket#acceleration_status}
  */
  readonly accelerationStatus?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#acl S3Bucket#acl}
  */
  readonly acl?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#bucket S3Bucket#bucket}
  */
  readonly bucket?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#bucket_prefix S3Bucket#bucket_prefix}
  */
  readonly bucketPrefix?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#force_destroy S3Bucket#force_destroy}
  */
  readonly forceDestroy?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#hosted_zone_id S3Bucket#hosted_zone_id}
  */
  readonly hostedZoneId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#policy S3Bucket#policy}
  */
  readonly policy?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#region S3Bucket#region}
  */
  readonly region?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#request_payer S3Bucket#request_payer}
  */
  readonly requestPayer?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#tags S3Bucket#tags}
  */
  readonly tags?: cdktf.TerraformStringMap;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#website_domain S3Bucket#website_domain}
  */
  readonly websiteDomain?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#website_endpoint S3Bucket#website_endpoint}
  */
  readonly websiteEndpoint?: cdktf.TerraformString;
  /**
  * cors_rule block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#cors_rule S3Bucket#cors_rule}
  */
  readonly corsRule?: TerraformS3BucketCorsRuleList;
  /**
  * grant block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#grant S3Bucket#grant}
  */
  readonly grant?: TerraformS3BucketGrantSet;
  /**
  * lifecycle_rule block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#lifecycle_rule S3Bucket#lifecycle_rule}
  */
  readonly lifecycleRule?: TerraformS3BucketLifecycleRuleList;
  /**
  * logging block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#logging S3Bucket#logging}
  */
  readonly logging?: TerraformS3BucketLoggingSet;
  /**
  * object_lock_configuration block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#object_lock_configuration S3Bucket#object_lock_configuration}
  */
  readonly objectLockConfiguration?: TerraformS3BucketObjectLockConfigurationList;
  /**
  * replication_configuration block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#replication_configuration S3Bucket#replication_configuration}
  */
  readonly replicationConfiguration?: TerraformS3BucketReplicationConfigurationList;
  /**
  * server_side_encryption_configuration block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#server_side_encryption_configuration S3Bucket#server_side_encryption_configuration}
  */
  readonly serverSideEncryptionConfiguration?: TerraformS3BucketServerSideEncryptionConfigurationList;
  /**
  * versioning block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#versioning S3Bucket#versioning}
  */
  readonly versioning?: TerraformS3BucketVersioningList;
  /**
  * website block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#website S3Bucket#website}
  */
  readonly website?: TerraformS3BucketWebsiteList;
}
export interface S3BucketCorsRule {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#allowed_headers S3Bucket#allowed_headers}
  */
  readonly allowedHeaders?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#allowed_methods S3Bucket#allowed_methods}
  */
  readonly allowedMethods: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#allowed_origins S3Bucket#allowed_origins}
  */
  readonly allowedOrigins: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#expose_headers S3Bucket#expose_headers}
  */
  readonly exposeHeaders?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#max_age_seconds S3Bucket#max_age_seconds}
  */
  readonly maxAgeSeconds?: cdktf.TerraformNumber;
}

function s3BucketCorsRuleToTerraform(struct?: S3BucketCorsRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    allowed_headers: struct!.allowedHeaders.toTerraform(),
    allowed_methods: struct!.allowedMethods.toTerraform(),
    allowed_origins: struct!.allowedOrigins.toTerraform(),
    expose_headers: struct!.exposeHeaders.toTerraform(),
    max_age_seconds: struct!.maxAgeSeconds.toTerraform(),
  }
}

export interface S3BucketGrant {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#id S3Bucket#id}
  */
  readonly id?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#permissions S3Bucket#permissions}
  */
  readonly permissions: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#type S3Bucket#type}
  */
  readonly type: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#uri S3Bucket#uri}
  */
  readonly uri?: cdktf.TerraformString;
}

function s3BucketGrantToTerraform(struct?: S3BucketGrant): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    id: struct!.id.toTerraform(),
    permissions: struct!.permissions.toTerraform(),
    type: struct!.type.toTerraform(),
    uri: struct!.uri.toTerraform(),
  }
}

export interface S3BucketLifecycleRuleExpiration {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#date S3Bucket#date}
  */
  readonly date?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#days S3Bucket#days}
  */
  readonly days?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#expired_object_delete_marker S3Bucket#expired_object_delete_marker}
  */
  readonly expiredObjectDeleteMarker?: cdktf.TerraformBoolean;
}

function s3BucketLifecycleRuleExpirationToTerraform(struct?: S3BucketLifecycleRuleExpiration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    date: struct!.date.toTerraform(),
    days: struct!.days.toTerraform(),
    expired_object_delete_marker: struct!.expiredObjectDeleteMarker.toTerraform(),
  }
}

export interface S3BucketLifecycleRuleNoncurrentVersionExpiration {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#days S3Bucket#days}
  */
  readonly days?: cdktf.TerraformNumber;
}

function s3BucketLifecycleRuleNoncurrentVersionExpirationToTerraform(struct?: S3BucketLifecycleRuleNoncurrentVersionExpiration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    days: struct!.days.toTerraform(),
  }
}

export interface S3BucketLifecycleRuleNoncurrentVersionTransition {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#days S3Bucket#days}
  */
  readonly days?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#storage_class S3Bucket#storage_class}
  */
  readonly storageClass: cdktf.TerraformString;
}

function s3BucketLifecycleRuleNoncurrentVersionTransitionToTerraform(struct?: S3BucketLifecycleRuleNoncurrentVersionTransition): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    days: struct!.days.toTerraform(),
    storage_class: struct!.storageClass.toTerraform(),
  }
}

export interface S3BucketLifecycleRuleTransition {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#date S3Bucket#date}
  */
  readonly date?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#days S3Bucket#days}
  */
  readonly days?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#storage_class S3Bucket#storage_class}
  */
  readonly storageClass: cdktf.TerraformString;
}

function s3BucketLifecycleRuleTransitionToTerraform(struct?: S3BucketLifecycleRuleTransition): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    date: struct!.date.toTerraform(),
    days: struct!.days.toTerraform(),
    storage_class: struct!.storageClass.toTerraform(),
  }
}

export interface S3BucketLifecycleRule {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#abort_incomplete_multipart_upload_days S3Bucket#abort_incomplete_multipart_upload_days}
  */
  readonly abortIncompleteMultipartUploadDays?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#enabled S3Bucket#enabled}
  */
  readonly enabled: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#id S3Bucket#id}
  */
  readonly id?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#prefix S3Bucket#prefix}
  */
  readonly prefix?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#tags S3Bucket#tags}
  */
  readonly tags?: cdktf.TerraformStringMap;
  /**
  * expiration block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#expiration S3Bucket#expiration}
  */
  readonly expiration?: TerraformS3BucketLifecycleRuleExpirationSet;
  /**
  * noncurrent_version_expiration block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#noncurrent_version_expiration S3Bucket#noncurrent_version_expiration}
  */
  readonly noncurrentVersionExpiration?: TerraformS3BucketLifecycleRuleNoncurrentVersionExpirationSet;
  /**
  * noncurrent_version_transition block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#noncurrent_version_transition S3Bucket#noncurrent_version_transition}
  */
  readonly noncurrentVersionTransition?: TerraformS3BucketLifecycleRuleNoncurrentVersionTransitionSet;
  /**
  * transition block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#transition S3Bucket#transition}
  */
  readonly transition?: TerraformS3BucketLifecycleRuleTransitionSet;
}

function s3BucketLifecycleRuleToTerraform(struct?: S3BucketLifecycleRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    abort_incomplete_multipart_upload_days: struct!.abortIncompleteMultipartUploadDays.toTerraform(),
    enabled: struct!.enabled.toTerraform(),
    id: struct!.id.toTerraform(),
    prefix: struct!.prefix.toTerraform(),
    tags: struct!.tags.toTerraform(),
    expiration: struct!.expiration.toTerraform(),
    noncurrent_version_expiration: struct!.noncurrentVersionExpiration.toTerraform(),
    noncurrent_version_transition: struct!.noncurrentVersionTransition.toTerraform(),
    transition: struct!.transition.toTerraform(),
  }
}

export interface S3BucketLogging {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#target_bucket S3Bucket#target_bucket}
  */
  readonly targetBucket: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#target_prefix S3Bucket#target_prefix}
  */
  readonly targetPrefix?: cdktf.TerraformString;
}

function s3BucketLoggingToTerraform(struct?: S3BucketLogging): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    target_bucket: struct!.targetBucket.toTerraform(),
    target_prefix: struct!.targetPrefix.toTerraform(),
  }
}

export interface S3BucketObjectLockConfigurationRuleDefaultRetention {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#days S3Bucket#days}
  */
  readonly days?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#mode S3Bucket#mode}
  */
  readonly mode: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#years S3Bucket#years}
  */
  readonly years?: cdktf.TerraformNumber;
}

function s3BucketObjectLockConfigurationRuleDefaultRetentionToTerraform(struct?: S3BucketObjectLockConfigurationRuleDefaultRetention): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    days: struct!.days.toTerraform(),
    mode: struct!.mode.toTerraform(),
    years: struct!.years.toTerraform(),
  }
}

export interface S3BucketObjectLockConfigurationRule {
  /**
  * default_retention block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#default_retention S3Bucket#default_retention}
  */
  readonly defaultRetention: TerraformS3BucketObjectLockConfigurationRuleDefaultRetentionList;
}

function s3BucketObjectLockConfigurationRuleToTerraform(struct?: S3BucketObjectLockConfigurationRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    default_retention: struct!.defaultRetention.toTerraform(),
  }
}

export interface S3BucketObjectLockConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#object_lock_enabled S3Bucket#object_lock_enabled}
  */
  readonly objectLockEnabled: cdktf.TerraformString;
  /**
  * rule block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#rule S3Bucket#rule}
  */
  readonly rule?: TerraformS3BucketObjectLockConfigurationRuleList;
}

function s3BucketObjectLockConfigurationToTerraform(struct?: S3BucketObjectLockConfiguration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    object_lock_enabled: struct!.objectLockEnabled.toTerraform(),
    rule: struct!.rule.toTerraform(),
  }
}

export interface S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#owner S3Bucket#owner}
  */
  readonly owner: cdktf.TerraformString;
}

function s3BucketReplicationConfigurationRulesDestinationAccessControlTranslationToTerraform(struct?: S3BucketReplicationConfigurationRulesDestinationAccessControlTranslation): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    owner: struct!.owner.toTerraform(),
  }
}

export interface S3BucketReplicationConfigurationRulesDestination {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#account_id S3Bucket#account_id}
  */
  readonly accountId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#bucket S3Bucket#bucket}
  */
  readonly bucket: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#replica_kms_key_id S3Bucket#replica_kms_key_id}
  */
  readonly replicaKmsKeyId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#storage_class S3Bucket#storage_class}
  */
  readonly storageClass?: cdktf.TerraformString;
  /**
  * access_control_translation block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#access_control_translation S3Bucket#access_control_translation}
  */
  readonly accessControlTranslation?: TerraformS3BucketReplicationConfigurationRulesDestinationAccessControlTranslationList;
}

function s3BucketReplicationConfigurationRulesDestinationToTerraform(struct?: S3BucketReplicationConfigurationRulesDestination): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    account_id: struct!.accountId.toTerraform(),
    bucket: struct!.bucket.toTerraform(),
    replica_kms_key_id: struct!.replicaKmsKeyId.toTerraform(),
    storage_class: struct!.storageClass.toTerraform(),
    access_control_translation: struct!.accessControlTranslation.toTerraform(),
  }
}

export interface S3BucketReplicationConfigurationRulesFilter {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#prefix S3Bucket#prefix}
  */
  readonly prefix?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#tags S3Bucket#tags}
  */
  readonly tags?: cdktf.TerraformStringMap;
}

function s3BucketReplicationConfigurationRulesFilterToTerraform(struct?: S3BucketReplicationConfigurationRulesFilter): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    prefix: struct!.prefix.toTerraform(),
    tags: struct!.tags.toTerraform(),
  }
}

export interface S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#enabled S3Bucket#enabled}
  */
  readonly enabled: cdktf.TerraformBoolean;
}

function s3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsToTerraform(struct?: S3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    enabled: struct!.enabled.toTerraform(),
  }
}

export interface S3BucketReplicationConfigurationRulesSourceSelectionCriteria {
  /**
  * sse_kms_encrypted_objects block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#sse_kms_encrypted_objects S3Bucket#sse_kms_encrypted_objects}
  */
  readonly sseKmsEncryptedObjects?: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsSet;
}

function s3BucketReplicationConfigurationRulesSourceSelectionCriteriaToTerraform(struct?: S3BucketReplicationConfigurationRulesSourceSelectionCriteria): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    sse_kms_encrypted_objects: struct!.sseKmsEncryptedObjects.toTerraform(),
  }
}

export interface S3BucketReplicationConfigurationRules {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#id S3Bucket#id}
  */
  readonly id?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#prefix S3Bucket#prefix}
  */
  readonly prefix?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#priority S3Bucket#priority}
  */
  readonly priority?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#status S3Bucket#status}
  */
  readonly status: cdktf.TerraformString;
  /**
  * destination block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#destination S3Bucket#destination}
  */
  readonly destination: TerraformS3BucketReplicationConfigurationRulesDestinationSet;
  /**
  * filter block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#filter S3Bucket#filter}
  */
  readonly filter?: TerraformS3BucketReplicationConfigurationRulesFilterList;
  /**
  * source_selection_criteria block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#source_selection_criteria S3Bucket#source_selection_criteria}
  */
  readonly sourceSelectionCriteria?: TerraformS3BucketReplicationConfigurationRulesSourceSelectionCriteriaSet;
}

function s3BucketReplicationConfigurationRulesToTerraform(struct?: S3BucketReplicationConfigurationRules): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    id: struct!.id.toTerraform(),
    prefix: struct!.prefix.toTerraform(),
    priority: struct!.priority.toTerraform(),
    status: struct!.status.toTerraform(),
    destination: struct!.destination.toTerraform(),
    filter: struct!.filter.toTerraform(),
    source_selection_criteria: struct!.sourceSelectionCriteria.toTerraform(),
  }
}

export interface S3BucketReplicationConfiguration {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#role S3Bucket#role}
  */
  readonly role: cdktf.TerraformString;
  /**
  * rules block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#rules S3Bucket#rules}
  */
  readonly rules: TerraformS3BucketReplicationConfigurationRulesSet;
}

function s3BucketReplicationConfigurationToTerraform(struct?: S3BucketReplicationConfiguration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    role: struct!.role.toTerraform(),
    rules: struct!.rules.toTerraform(),
  }
}

export interface S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#kms_master_key_id S3Bucket#kms_master_key_id}
  */
  readonly kmsMasterKeyId?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#sse_algorithm S3Bucket#sse_algorithm}
  */
  readonly sseAlgorithm: cdktf.TerraformString;
}

function s3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultToTerraform(struct?: S3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    kms_master_key_id: struct!.kmsMasterKeyId.toTerraform(),
    sse_algorithm: struct!.sseAlgorithm.toTerraform(),
  }
}

export interface S3BucketServerSideEncryptionConfigurationRule {
  /**
  * apply_server_side_encryption_by_default block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#apply_server_side_encryption_by_default S3Bucket#apply_server_side_encryption_by_default}
  */
  readonly applyServerSideEncryptionByDefault: TerraformS3BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultList;
}

function s3BucketServerSideEncryptionConfigurationRuleToTerraform(struct?: S3BucketServerSideEncryptionConfigurationRule): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    apply_server_side_encryption_by_default: struct!.applyServerSideEncryptionByDefault.toTerraform(),
  }
}

export interface S3BucketServerSideEncryptionConfiguration {
  /**
  * rule block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#rule S3Bucket#rule}
  */
  readonly rule: TerraformS3BucketServerSideEncryptionConfigurationRuleList;
}

function s3BucketServerSideEncryptionConfigurationToTerraform(struct?: S3BucketServerSideEncryptionConfiguration): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    rule: struct!.rule.toTerraform(),
  }
}

export interface S3BucketVersioning {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#enabled S3Bucket#enabled}
  */
  readonly enabled?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#mfa_delete S3Bucket#mfa_delete}
  */
  readonly mfaDelete?: cdktf.TerraformBoolean;
}

function s3BucketVersioningToTerraform(struct?: S3BucketVersioning): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    enabled: struct!.enabled.toTerraform(),
    mfa_delete: struct!.mfaDelete.toTerraform(),
  }
}

export interface S3BucketWebsite {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#error_document S3Bucket#error_document}
  */
  readonly errorDocument?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#index_document S3Bucket#index_document}
  */
  readonly indexDocument?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#redirect_all_requests_to S3Bucket#redirect_all_requests_to}
  */
  readonly redirectAllRequestsTo?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html#routing_rules S3Bucket#routing_rules}
  */
  readonly routingRules?: cdktf.TerraformString;
}

function s3BucketWebsiteToTerraform(struct?: S3BucketWebsite): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    error_document: struct!.errorDocument.toTerraform(),
    index_document: struct!.indexDocument.toTerraform(),
    redirect_all_requests_to: struct!.redirectAllRequestsTo.toTerraform(),
    routing_rules: struct!.routingRules.toTerraform(),
  }
}


/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html aws_s3_bucket}
*/
export class S3Bucket extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket.html aws_s3_bucket} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options S3BucketConfig = {}
  */
  public constructor(scope: Construct, id: string, config: S3BucketConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_s3_bucket',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this.putAccelerationStatus(config.accelerationStatus ?? new cdktf.TerraformStringAttribute(this, 'acceleration_status', undefined));
    this.putAcl(config.acl ?? new cdktf.TerraformStringAttribute(this, 'acl', undefined));
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this.putBucket(config.bucket ?? new cdktf.TerraformStringAttribute(this, 'bucket', undefined));
    this._bucketDomainName = new cdktf.TerraformStringAttribute(this, 'bucket_domain_name', undefined)
    this.putBucketPrefix(config.bucketPrefix ?? new cdktf.TerraformStringAttribute(this, 'bucket_prefix', undefined));
    this._bucketRegionalDomainName = new cdktf.TerraformStringAttribute(this, 'bucket_regional_domain_name', undefined)
    this.putForceDestroy(config.forceDestroy ?? new cdktf.TerraformBooleanAttribute(this, 'force_destroy', undefined));
    this.putHostedZoneId(config.hostedZoneId ?? new cdktf.TerraformStringAttribute(this, 'hosted_zone_id', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this.putPolicy(config.policy ?? new cdktf.TerraformStringAttribute(this, 'policy', undefined));
    this.putRegion(config.region ?? new cdktf.TerraformStringAttribute(this, 'region', undefined));
    this.putRequestPayer(config.requestPayer ?? new cdktf.TerraformStringAttribute(this, 'request_payer', undefined));
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this.putWebsiteDomain(config.websiteDomain ?? new cdktf.TerraformStringAttribute(this, 'website_domain', undefined));
    this.putWebsiteEndpoint(config.websiteEndpoint ?? new cdktf.TerraformStringAttribute(this, 'website_endpoint', undefined));
    this.putCorsRule(config.corsRule ?? new TerraformS3BucketCorsRuleListAttribute(this, 'cors_rule', undefined));
    this.putGrant(config.grant ?? new TerraformS3BucketGrantSetAttribute(this, 'grant', undefined));
    this.putLifecycleRule(config.lifecycleRule ?? new TerraformS3BucketLifecycleRuleListAttribute(this, 'lifecycle_rule', undefined));
    this.putLogging(config.logging ?? new TerraformS3BucketLoggingSetAttribute(this, 'logging', undefined));
    this.putObjectLockConfiguration(config.objectLockConfiguration ?? new TerraformS3BucketObjectLockConfigurationListAttribute(this, 'object_lock_configuration', undefined));
    this.putReplicationConfiguration(config.replicationConfiguration ?? new TerraformS3BucketReplicationConfigurationListAttribute(this, 'replication_configuration', undefined));
    this.putServerSideEncryptionConfiguration(config.serverSideEncryptionConfiguration ?? new TerraformS3BucketServerSideEncryptionConfigurationListAttribute(this, 'server_side_encryption_configuration', undefined));
    this.putVersioning(config.versioning ?? new TerraformS3BucketVersioningListAttribute(this, 'versioning', undefined));
    this.putWebsite(config.website ?? new TerraformS3BucketWebsiteListAttribute(this, 'website', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // acceleration_status - computed: true, optional: true, required: false
  private _accelerationStatus!: cdktf.TerraformStringAttribute;
  public get accelerationStatus() {
    return this._accelerationStatus;
  }
  public putAccelerationStatus(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._accelerationStatus.reset();
    }
    else {
      this._accelerationStatus = cdktf.TerraformStringAttribute.create(this, 'acceleration_status', value);
    }
  }

  // acl - computed: false, optional: true, required: false
  private _acl!: cdktf.TerraformStringAttribute;
  public get acl() {
    return this._acl;
  }
  public putAcl(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._acl.reset();
    }
    else {
      this._acl = cdktf.TerraformStringAttribute.create(this, 'acl', value);
    }
  }

  // arn - computed: true, optional: true, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // bucket - computed: true, optional: true, required: false
  private _bucket!: cdktf.TerraformStringAttribute;
  public get bucket() {
    return this._bucket;
  }
  public putBucket(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._bucket.reset();
    }
    else {
      this._bucket = cdktf.TerraformStringAttribute.create(this, 'bucket', value);
    }
  }

  // bucket_domain_name - computed: true, optional: false, required: false
  private _bucketDomainName: cdktf.TerraformStringAttribute;
  public get bucketDomainName() {
    return this._bucketDomainName;
  }

  // bucket_prefix - computed: false, optional: true, required: false
  private _bucketPrefix!: cdktf.TerraformStringAttribute;
  public get bucketPrefix() {
    return this._bucketPrefix;
  }
  public putBucketPrefix(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._bucketPrefix.reset();
    }
    else {
      this._bucketPrefix = cdktf.TerraformStringAttribute.create(this, 'bucket_prefix', value);
    }
  }

  // bucket_regional_domain_name - computed: true, optional: false, required: false
  private _bucketRegionalDomainName: cdktf.TerraformStringAttribute;
  public get bucketRegionalDomainName() {
    return this._bucketRegionalDomainName;
  }

  // force_destroy - computed: false, optional: true, required: false
  private _forceDestroy!: cdktf.TerraformBooleanAttribute;
  public get forceDestroy() {
    return this._forceDestroy;
  }
  public putForceDestroy(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._forceDestroy.reset();
    }
    else {
      this._forceDestroy = cdktf.TerraformBooleanAttribute.create(this, 'force_destroy', value);
    }
  }

  // hosted_zone_id - computed: true, optional: true, required: false
  private _hostedZoneId!: cdktf.TerraformStringAttribute;
  public get hostedZoneId() {
    return this._hostedZoneId;
  }
  public putHostedZoneId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._hostedZoneId.reset();
    }
    else {
      this._hostedZoneId = cdktf.TerraformStringAttribute.create(this, 'hosted_zone_id', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // policy - computed: false, optional: true, required: false
  private _policy!: cdktf.TerraformStringAttribute;
  public get policy() {
    return this._policy;
  }
  public putPolicy(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._policy.reset();
    }
    else {
      this._policy = cdktf.TerraformStringAttribute.create(this, 'policy', value);
    }
  }

  // region - computed: true, optional: true, required: false
  private _region!: cdktf.TerraformStringAttribute;
  public get region() {
    return this._region;
  }
  public putRegion(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._region.reset();
    }
    else {
      this._region = cdktf.TerraformStringAttribute.create(this, 'region', value);
    }
  }

  // request_payer - computed: true, optional: true, required: false
  private _requestPayer!: cdktf.TerraformStringAttribute;
  public get requestPayer() {
    return this._requestPayer;
  }
  public putRequestPayer(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._requestPayer.reset();
    }
    else {
      this._requestPayer = cdktf.TerraformStringAttribute.create(this, 'request_payer', value);
    }
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.reset();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.create(this, 'tags', value);
    }
  }

  // website_domain - computed: true, optional: true, required: false
  private _websiteDomain!: cdktf.TerraformStringAttribute;
  public get websiteDomain() {
    return this._websiteDomain;
  }
  public putWebsiteDomain(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._websiteDomain.reset();
    }
    else {
      this._websiteDomain = cdktf.TerraformStringAttribute.create(this, 'website_domain', value);
    }
  }

  // website_endpoint - computed: true, optional: true, required: false
  private _websiteEndpoint!: cdktf.TerraformStringAttribute;
  public get websiteEndpoint() {
    return this._websiteEndpoint;
  }
  public putWebsiteEndpoint(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._websiteEndpoint.reset();
    }
    else {
      this._websiteEndpoint = cdktf.TerraformStringAttribute.create(this, 'website_endpoint', value);
    }
  }

  // cors_rule - computed: false, optional: true, required: false
  private _corsRule!: TerraformS3BucketCorsRuleListAttribute;
  public get corsRule() {
    return this._corsRule;
  }
  public putCorsRule(value: TerraformS3BucketCorsRuleList | undefined) {
    if (value === undefined) {
      this._corsRule.reset();
    }
    else {
      this._corsRule = TerraformS3BucketCorsRuleListAttribute.create(this, 'cors_rule', value);
    }
  }

  // grant - computed: false, optional: true, required: false
  private _grant!: TerraformS3BucketGrantSetAttribute;
  public get grant() {
    return this._grant;
  }
  public putGrant(value: TerraformS3BucketGrantSet | undefined) {
    if (value === undefined) {
      this._grant.reset();
    }
    else {
      this._grant = TerraformS3BucketGrantSetAttribute.create(this, 'grant', value);
    }
  }

  // lifecycle_rule - computed: false, optional: true, required: false
  private _lifecycleRule!: TerraformS3BucketLifecycleRuleListAttribute;
  public get lifecycleRule() {
    return this._lifecycleRule;
  }
  public putLifecycleRule(value: TerraformS3BucketLifecycleRuleList | undefined) {
    if (value === undefined) {
      this._lifecycleRule.reset();
    }
    else {
      this._lifecycleRule = TerraformS3BucketLifecycleRuleListAttribute.create(this, 'lifecycle_rule', value);
    }
  }

  // logging - computed: false, optional: true, required: false
  private _logging!: TerraformS3BucketLoggingSetAttribute;
  public get logging() {
    return this._logging;
  }
  public putLogging(value: TerraformS3BucketLoggingSet | undefined) {
    if (value === undefined) {
      this._logging.reset();
    }
    else {
      this._logging = TerraformS3BucketLoggingSetAttribute.create(this, 'logging', value);
    }
  }

  // object_lock_configuration - computed: false, optional: true, required: false
  private _objectLockConfiguration!: TerraformS3BucketObjectLockConfigurationListAttribute;
  public get objectLockConfiguration() {
    return this._objectLockConfiguration;
  }
  public putObjectLockConfiguration(value: TerraformS3BucketObjectLockConfigurationList | undefined) {
    if (value === undefined) {
      this._objectLockConfiguration.reset();
    }
    else {
      this._objectLockConfiguration = TerraformS3BucketObjectLockConfigurationListAttribute.create(this, 'object_lock_configuration', value);
    }
  }

  // replication_configuration - computed: false, optional: true, required: false
  private _replicationConfiguration!: TerraformS3BucketReplicationConfigurationListAttribute;
  public get replicationConfiguration() {
    return this._replicationConfiguration;
  }
  public putReplicationConfiguration(value: TerraformS3BucketReplicationConfigurationList | undefined) {
    if (value === undefined) {
      this._replicationConfiguration.reset();
    }
    else {
      this._replicationConfiguration = TerraformS3BucketReplicationConfigurationListAttribute.create(this, 'replication_configuration', value);
    }
  }

  // server_side_encryption_configuration - computed: false, optional: true, required: false
  private _serverSideEncryptionConfiguration!: TerraformS3BucketServerSideEncryptionConfigurationListAttribute;
  public get serverSideEncryptionConfiguration() {
    return this._serverSideEncryptionConfiguration;
  }
  public putServerSideEncryptionConfiguration(value: TerraformS3BucketServerSideEncryptionConfigurationList | undefined) {
    if (value === undefined) {
      this._serverSideEncryptionConfiguration.reset();
    }
    else {
      this._serverSideEncryptionConfiguration = TerraformS3BucketServerSideEncryptionConfigurationListAttribute.create(this, 'server_side_encryption_configuration', value);
    }
  }

  // versioning - computed: false, optional: true, required: false
  private _versioning!: TerraformS3BucketVersioningListAttribute;
  public get versioning() {
    return this._versioning;
  }
  public putVersioning(value: TerraformS3BucketVersioningList | undefined) {
    if (value === undefined) {
      this._versioning.reset();
    }
    else {
      this._versioning = TerraformS3BucketVersioningListAttribute.create(this, 'versioning', value);
    }
  }

  // website - computed: false, optional: true, required: false
  private _website!: TerraformS3BucketWebsiteListAttribute;
  public get website() {
    return this._website;
  }
  public putWebsite(value: TerraformS3BucketWebsiteList | undefined) {
    if (value === undefined) {
      this._website.reset();
    }
    else {
      this._website = TerraformS3BucketWebsiteListAttribute.create(this, 'website', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      acceleration_status: this._accelerationStatus.toTerraform(),
      acl: this._acl.toTerraform(),
      bucket: this._bucket.toTerraform(),
      bucket_prefix: this._bucketPrefix.toTerraform(),
      force_destroy: this._forceDestroy.toTerraform(),
      hosted_zone_id: this._hostedZoneId.toTerraform(),
      policy: this._policy.toTerraform(),
      region: this._region.toTerraform(),
      request_payer: this._requestPayer.toTerraform(),
      tags: this._tags.toTerraform(),
      website_domain: this._websiteDomain.toTerraform(),
      website_endpoint: this._websiteEndpoint.toTerraform(),
      cors_rule: this._corsRule.toTerraform(),
      grant: this._grant.toTerraform(),
      lifecycle_rule: this._lifecycleRule.toTerraform(),
      logging: this._logging.toTerraform(),
      object_lock_configuration: this._objectLockConfiguration.toTerraform(),
      replication_configuration: this._replicationConfiguration.toTerraform(),
      server_side_encryption_configuration: this._serverSideEncryptionConfiguration.toTerraform(),
      versioning: this._versioning.toTerraform(),
      website: this._website.toTerraform(),
    };
  }
}
"
`;

exports[`generate a security group 1`] = `
"// https://www.terraform.io/docs/providers/aws/r/security_group.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface SecurityGroupConfig extends cdktf.TerraformMetaArguments {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#description SecurityGroup#description}
  */
  readonly description?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#egress SecurityGroup#egress}
  */
  readonly egress?: TerraformSecurityGroupEgressSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#ingress SecurityGroup#ingress}
  */
  readonly ingress?: TerraformSecurityGroupIngressSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#name SecurityGroup#name}
  */
  readonly name?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#name_prefix SecurityGroup#name_prefix}
  */
  readonly namePrefix?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#revoke_rules_on_delete SecurityGroup#revoke_rules_on_delete}
  */
  readonly revokeRulesOnDelete?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#tags SecurityGroup#tags}
  */
  readonly tags?: cdktf.TerraformStringMap;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#vpc_id SecurityGroup#vpc_id}
  */
  readonly vpcId?: cdktf.TerraformString;
  /**
  * timeouts block
  * 
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#timeouts SecurityGroup#timeouts}
  */
  readonly timeouts?: TerraformSecurityGroupTimeouts;
}
export interface SecurityGroupEgress {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#cidr_blocks SecurityGroup#cidr_blocks}
  */
  readonly cidrBlocks?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#description SecurityGroup#description}
  */
  readonly description?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#from_port SecurityGroup#from_port}
  */
  readonly fromPort?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#ipv6_cidr_blocks SecurityGroup#ipv6_cidr_blocks}
  */
  readonly ipv6CidrBlocks?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#prefix_list_ids SecurityGroup#prefix_list_ids}
  */
  readonly prefixListIds?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#protocol SecurityGroup#protocol}
  */
  readonly protocol?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#security_groups SecurityGroup#security_groups}
  */
  readonly securityGroups?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#self SecurityGroup#self}
  */
  readonly selfAttribute?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#to_port SecurityGroup#to_port}
  */
  readonly toPort?: cdktf.TerraformNumber;
}

function securityGroupEgressToTerraform(struct?: SecurityGroupEgress): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    cidr_blocks: struct!.cidrBlocks.toTerraform(),
    description: struct!.description.toTerraform(),
    from_port: struct!.fromPort.toTerraform(),
    ipv6_cidr_blocks: struct!.ipv6CidrBlocks.toTerraform(),
    prefix_list_ids: struct!.prefixListIds.toTerraform(),
    protocol: struct!.protocol.toTerraform(),
    security_groups: struct!.securityGroups.toTerraform(),
    self: struct!.selfAttribute.toTerraform(),
    to_port: struct!.toPort.toTerraform(),
  }
}

export interface SecurityGroupIngress {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#cidr_blocks SecurityGroup#cidr_blocks}
  */
  readonly cidrBlocks?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#description SecurityGroup#description}
  */
  readonly description?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#from_port SecurityGroup#from_port}
  */
  readonly fromPort?: cdktf.TerraformNumber;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#ipv6_cidr_blocks SecurityGroup#ipv6_cidr_blocks}
  */
  readonly ipv6CidrBlocks?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#prefix_list_ids SecurityGroup#prefix_list_ids}
  */
  readonly prefixListIds?: cdktf.TerraformStringList;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#protocol SecurityGroup#protocol}
  */
  readonly protocol?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#security_groups SecurityGroup#security_groups}
  */
  readonly securityGroups?: cdktf.TerraformStringSet;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#self SecurityGroup#self}
  */
  readonly selfAttribute?: cdktf.TerraformBoolean;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#to_port SecurityGroup#to_port}
  */
  readonly toPort?: cdktf.TerraformNumber;
}

function securityGroupIngressToTerraform(struct?: SecurityGroupIngress): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    cidr_blocks: struct!.cidrBlocks.toTerraform(),
    description: struct!.description.toTerraform(),
    from_port: struct!.fromPort.toTerraform(),
    ipv6_cidr_blocks: struct!.ipv6CidrBlocks.toTerraform(),
    prefix_list_ids: struct!.prefixListIds.toTerraform(),
    protocol: struct!.protocol.toTerraform(),
    security_groups: struct!.securityGroups.toTerraform(),
    self: struct!.selfAttribute.toTerraform(),
    to_port: struct!.toPort.toTerraform(),
  }
}

export interface SecurityGroupTimeouts {
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#create SecurityGroup#create}
  */
  readonly create?: cdktf.TerraformString;
  /**
  * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/security_group.html#delete SecurityGroup#delete}
  */
  readonly delete?: cdktf.TerraformString;
}

function securityGroupTimeoutsToTerraform(struct?: SecurityGroupTimeouts): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    create: struct!.create.toTerraform(),
    delete: struct!.delete.toTerraform(),
  }
}


/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/security_group.html aws_security_group}
*/
export class SecurityGroup extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  /**
  * Create a new {@link https://www.terraform.io/docs/providers/aws/r/security_group.html aws_security_group} Resource
  *
  * @param scope The scope in which to define this construct
  * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
  * @param options SecurityGroupConfig = {}
  */
  public constructor(scope: Construct, id: string, config: SecurityGroupConfig = {}) {
    super(scope, id, {
      terraformResourceType: 'aws_security_group',
      terraformGeneratorMetadata: {
        providerName: 'aws'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._arn = new cdktf.TerraformStringAttribute(this, 'arn', undefined)
    this.putDescription(config.description ?? new cdktf.TerraformStringAttribute(this, 'description', undefined));
    this.putEgress(config.egress ?? new TerraformSecurityGroupEgressSetAttribute(this, 'egress', undefined));
    this._id = new cdktf.TerraformStringAttribute(this, 'id', undefined)
    this.putIngress(config.ingress ?? new TerraformSecurityGroupIngressSetAttribute(this, 'ingress', undefined));
    this.putName(config.name ?? new cdktf.TerraformStringAttribute(this, 'name', undefined));
    this.putNamePrefix(config.namePrefix ?? new cdktf.TerraformStringAttribute(this, 'name_prefix', undefined));
    this._ownerId = new cdktf.TerraformStringAttribute(this, 'owner_id', undefined)
    this.putRevokeRulesOnDelete(config.revokeRulesOnDelete ?? new cdktf.TerraformBooleanAttribute(this, 'revoke_rules_on_delete', undefined));
    this.putTags(config.tags ?? new cdktf.TerraformStringMapAttribute(this, 'tags', undefined));
    this.putVpcId(config.vpcId ?? new cdktf.TerraformStringAttribute(this, 'vpc_id', undefined));
    this.putTimeouts(config.timeouts ?? new TerraformSecurityGroupTimeoutsAttribute(this, 'timeouts', undefined));
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // arn - computed: true, optional: false, required: false
  private _arn: cdktf.TerraformStringAttribute;
  public get arn() {
    return this._arn;
  }

  // description - computed: false, optional: true, required: false
  private _description!: cdktf.TerraformStringAttribute;
  public get description() {
    return this._description;
  }
  public putDescription(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._description.reset();
    }
    else {
      this._description = cdktf.TerraformStringAttribute.create(this, 'description', value);
    }
  }

  // egress - computed: true, optional: true, required: false
  private _egress!: TerraformSecurityGroupEgressSetAttribute;
  public get egress() {
    return this._egress;
  }
  public putEgress(value: TerraformSecurityGroupEgressSet | undefined) {
    if (value === undefined) {
      this._egress.reset();
    }
    else {
      this._egress = TerraformSecurityGroupEgressSetAttribute.create(this, 'egress', value);
    }
  }

  // id - computed: true, optional: true, required: false
  private _id: cdktf.TerraformStringAttribute;
  public get id() {
    return this._id;
  }

  // ingress - computed: true, optional: true, required: false
  private _ingress!: TerraformSecurityGroupIngressSetAttribute;
  public get ingress() {
    return this._ingress;
  }
  public putIngress(value: TerraformSecurityGroupIngressSet | undefined) {
    if (value === undefined) {
      this._ingress.reset();
    }
    else {
      this._ingress = TerraformSecurityGroupIngressSetAttribute.create(this, 'ingress', value);
    }
  }

  // name - computed: true, optional: true, required: false
  private _name!: cdktf.TerraformStringAttribute;
  public get name() {
    return this._name;
  }
  public putName(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._name.reset();
    }
    else {
      this._name = cdktf.TerraformStringAttribute.create(this, 'name', value);
    }
  }

  // name_prefix - computed: false, optional: true, required: false
  private _namePrefix!: cdktf.TerraformStringAttribute;
  public get namePrefix() {
    return this._namePrefix;
  }
  public putNamePrefix(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._namePrefix.reset();
    }
    else {
      this._namePrefix = cdktf.TerraformStringAttribute.create(this, 'name_prefix', value);
    }
  }

  // owner_id - computed: true, optional: false, required: false
  private _ownerId: cdktf.TerraformStringAttribute;
  public get ownerId() {
    return this._ownerId;
  }

  // revoke_rules_on_delete - computed: false, optional: true, required: false
  private _revokeRulesOnDelete!: cdktf.TerraformBooleanAttribute;
  public get revokeRulesOnDelete() {
    return this._revokeRulesOnDelete;
  }
  public putRevokeRulesOnDelete(value: cdktf.TerraformBoolean | undefined) {
    if (value === undefined) {
      this._revokeRulesOnDelete.reset();
    }
    else {
      this._revokeRulesOnDelete = cdktf.TerraformBooleanAttribute.create(this, 'revoke_rules_on_delete', value);
    }
  }

  // tags - computed: false, optional: true, required: false
  private _tags!: cdktf.TerraformStringMapAttribute;
  public get tags() {
    return this._tags;
  }
  public putTags(value: cdktf.TerraformStringMap | undefined) {
    if (value === undefined) {
      this._tags.reset();
    }
    else {
      this._tags = cdktf.TerraformStringMapAttribute.create(this, 'tags', value);
    }
  }

  // vpc_id - computed: true, optional: true, required: false
  private _vpcId!: cdktf.TerraformStringAttribute;
  public get vpcId() {
    return this._vpcId;
  }
  public putVpcId(value: cdktf.TerraformString | undefined) {
    if (value === undefined) {
      this._vpcId.reset();
    }
    else {
      this._vpcId = cdktf.TerraformStringAttribute.create(this, 'vpc_id', value);
    }
  }

  // timeouts - computed: false, optional: true, required: false
  private _timeouts!: TerraformSecurityGroupTimeoutsAttribute;
  public get timeouts() {
    return this._timeouts;
  }
  public putTimeouts(value: TerraformSecurityGroupTimeouts | undefined) {
    if (value === undefined) {
      this._timeouts.reset();
    }
    else {
      this._timeouts = TerraformSecurityGroupTimeoutsAttribute.create(this, 'timeouts', value);
    }
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      description: this._description.toTerraform(),
      egress: this._egress.toTerraform(),
      ingress: this._ingress.toTerraform(),
      name: this._name.toTerraform(),
      name_prefix: this._namePrefix.toTerraform(),
      revoke_rules_on_delete: this._revokeRulesOnDelete.toTerraform(),
      tags: this._tags.toTerraform(),
      vpc_id: this._vpcId.toTerraform(),
      timeouts: this._timeouts.toTerraform(),
    };
  }
}
"
`;
